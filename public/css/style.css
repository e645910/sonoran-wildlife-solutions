/*
 * HTML5 Boilerplate
 *
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html,
button,
input,
select,
textarea {
    color: #222;
}
a {
    color: #00e;
}
a:visited {
    color: #551a8b;
}
a:hover {
    color: #06e;
}
/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 */

img {
    vertical-align: middle;
    width: 100%;
    height: 100%;
}
/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}
/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}
/* =================================================================
   Browser Upgrade Prompt
   ============================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}
/* ================================================================
   Author's custom styles
   ============================================================== */
body {
    width: 100%;
    height: 100em;
    font-size: 62.5%;
    line-height: 1.4;
}
.container {
    position: relative;
    width: 100%;
    height: 100%;  
}
.mainImage img {
    position: absolute;
    top: 0;
    width: 100%;
    height: 80%;
    z-index: 0;
}
.logo img {
    position: absolute;
    top: 1.5%;
    left: 1.5%;
    width: 8%;
    height: auto;
    z-index: 5;
}
.pageHeader {
    position: absolute;
    top: 3%;
    left: 60%;
    width: 35%;
    height: 8%;
    /*border: 2px solid black;*/
}
.pageHeader ul, li {
    display: inline;
    list-style-type: none;
    padding-right: 5%;
}
.menuItem {
    position: relative;
    top: 20%;
    width: 30%;
    height: 15%;
    font-family: serif;
    font-size: 2em;
    font-style: normal;
    color: #FF0000;
    font-variant: small-caps;
    font-weight: bold;
    /*border: 2px solid red;*/
}
.menuItem::after {
    position: relative;
    top: 0.4em;
    border-style: solid;
    border-width: 0.1em 0.1em 0 0;
    content: '';
    display: inline-block;
    height: 0.3em;
    left: 0.4em;
    transform: rotate(135deg);
    vertical-align: top;
    width: 0.3em;
}
.visionContainer {
    position: relative;
    top: 15%;
    width: 100%;
    height: 30%;
    color: #FFF;
    /*border: 2px solid green;*/
}
.visionContainer label {
    position: relative;
    top: 10%;
    left: 43%;
    font-family: serif;
    font-size: 1.5em;
    font-style: italic;
    font-variant: small-caps;
    font-weight: 100;
    letter-spacing: .5em;
    /*border: 2px solid red;*/
}
.visionContainer p {
    position: absolute;
    top: 9%;
    left: 30%;
    width: 60%;
    font-family: 'Lucida Bright';
    font-size: 4em;
    font-style: normal;
    font-variant: small-caps;
    font-weight: normal;
    line-height: 1.1em;
    /*border: 2px solid red;*/
}
.visionContainer span {
    font-size: 1.4em;
    font-weight: bold;
}
.bannerContainer {
    position: absolute;
    top: 80%;
    left: 0;
    width: 100%;
    height: 10%;
    background: #F8F3E9;
    z-index: 5;
    /*border:2px solid red;*/
}
.bannerContainer p{
    font-family: 'Lucida Bright', Georgia, serif;
    font-size: 2em;
    font-style: normal;
    font-variant: small-caps;
    font-weight: 400;
    text-align: center;
    padding: 1%;
}
.heroContainer {
    position: absolute;
    top: 90%;
    width: 100%;
    /*max-height: 514px;*/
    margin: 0 auto;
    text-align: center;

   /* position: absolute;
    top: 90%;
    width: 100%;
    height: 30%;*/
    /*font-family: serif;
    font-variant: small-caps;
    color: #000;*/
    border: 2px solid black;
}
/*.heroContainer {
    width: 48%;
    display: inline-block;
}*/
.hero {
    position: absolute;
    top: 0;
    left: 30.7%;
 /*   width: 100%;
    height: 100%;*/
}
.two-columns {
  width: 48%;
  display: inline-block;
}
/*.sideImage img {
    width: 69.5%;
    height: 100%;
    opacity: 0.6;
}*/
.heroContainer label {
    position: absolute;
    top: 3%;
    left: 3%;
    font-size: 2em;
}
.heroContainer p {
    position: absolute;
    top: 10%;
    left: 5%;
    width: 55%;
    height: auto;
    font-size: 2em;
    font-style: italic;
    font-weight: 400;
    line-height: 21px;
    /*border: 2px solid black;*/
}
.heroContainer span {
    display: block;
    text-align: center;
    font-size: .8em;
    font-style: normal;
    color: #FFF;
}
.heroAddress p {
    position: absolute;
    top: 65%;
    left: 50%;
    height: 25%;
    width: 25%;
    text-align: center;
    /*border: 2px solid green;*/
}

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}
/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}
/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}
/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}
/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " ";
    /* 1 */
    
    display: table;
    /* 2 */
}
.clearfix:after {
    clear: both;
}
/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   Theses examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

/*@media only screen and (min-width: 800px) {*/
    /* Style adjustments for viewports that meet the condition */
/*}*/

/*@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
       only screen and (min-resolution: 144dpi) {*/
    /* Style adjustments for viewports that meet the condition */
/*}*/

















